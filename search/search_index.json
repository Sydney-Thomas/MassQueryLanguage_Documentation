{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is Mass Spec Query Language \u00b6 The Mass Spec Query Langauge (MSQL) is a domain specific language meant to be a succinct way to express a query in a mass spectrometry centric fashion. It is inspired by SQL, but it attempts to bake in assumptions of mass spectrometry to make querying much more natural for mass spectrometry users. Broadly we attempt to design it according to several principles: Expressiveness - Capture complex mass spectrometry patterns that the community would like to look for Precision - Exactly prescribe how to find data without ambiguity Relatively Natural - MSQL should be relatively easy to read and write and even use as a way to communicate ideas about mass spectrometry, you know like a language. Developers \u00b6 Mingxun Wang is the creator and main developer of MSQL. Please contact me if you have questions! I'm hoping this becomes a community effort so reach out if you want to help/use MSQL. Definition of a Query \u00b6 There are several parts QUERY <Type of Data> WHERE <Condition> AND <Condition> FILTER <Filter> AND <Filter> Type of Data \u00b6 This determines the type of data you want to get. At its most fundamental level, its the peaks for either MS1DATA MS2DATA Further, there are functions that can modify this data scaninfo - This provides likely the most information you'd want for each scan scansum - Summation of the scan scannum - Returns the scan number Experimental Functions scanrangesum scanmaxint scanmaxmz scanrun Conditionals \u00b6 These are conditions to filter for scans of interest (by looking for peaks and sets of peaks) within the mass spectrometry data. You can create clauses, which are specific conditions and the associated qualifiers. You may further combine multiple conditions with AND operators. The types of conditions are as follows RTMIN \u00b6 Setting the minimum retention time in minutes RTMAX \u00b6 Setting the maximum retention time in minutes MS2PROD \u00b6 Looking for an MS2 peak MS2PREC \u00b6 Looking for an MS2 precursor m/z MS2NL \u00b6 Looking for a neutral loss from precursor in the MS2 spectrum Qualifiers \u00b6 These can be attached to conditions to modify some properties about the peaks we are looking for. Mass Accuracy \u00b6 These two fields enable setting a peak m/z tolerance TOLERANCEMZ=0.1 TOLERANCEPPM=50 Intensity Relative to Full Spectrum \u00b6 These two fields enable to set an minimum intensity INTENSITYVALUE=1000 INTENSITYPERCENT=10 Intensity Relative to Other Peaks \u00b6 Here we can start imposing relative intensities between peaks INTENSITYMATCHREFERENCE INTENSITYMATCH=Y INTENSITYMATCH=Y*2 INTENSITYMATCHPERCENT=10 Intensity Matching Between Peaks This is actually complicated, but you'll end up with one peak per variable that is the reference and all others are relative to that reference. WHERE MS1MZ=X:INTENSITYMATCH=Y:INTENSITYMATCHREFERENCE AND MS1MZ=X+2:INTENSITYMATCH=Y*2:INTENSITYMATCHPERCENT=1 Filters \u00b6 Filters are like conditional but we don't elimate scans based on the condition. Rather, we simply filter out peaks within the spectra. This is useful for things like SRM or SIM/XIC. Examples \u00b6 XIC Generation \u00b6 MS1 XIC, m/z = 100 QUERY scansum(MS1DATA) FILTER MS1MZ=100:TOLERANCEMZ=0.1 MS2 With Sugar Loss - Neutral Loss Scan \u00b6 Neutral Loss, 163 Da QUERY scaninfo(MS2DATA) WHERE MS2NL=163 Brominated Compounds \u00b6 QUERY scaninfo(MS2DATA) WHERE MS1MZ=X:INTENSITYMATCH=Y:INTENSITYMATCHREFERENCE AND MS1MZ=X+2:INTENSITYMATCH=Y:INTENSITYMATCHPERCENT=5 AND MS2PREC=X MS2 with distinct fragment(s) - Precursor Ion Scan \u00b6 One Product Ion, m/z = 660.2 QUERY scaninfo(MS2DATA) WHERE MS2PROD=660.2:TOLERANCEMZ=0.1 Two Product Ions, m/z = 660.2 and 468.2 QUERY scaninfo(MS2DATA) WHERE MS2PROD=660.2:TOLERANCEMZ=0.1 AND MS2PROD=468.2:TOLERANCEMZ=0.1 How To Use MSQL \u00b6 Python API \u00b6 We have a python API that you can utilize in your own software. Commandline Utility \u00b6 We have a standalone script that can execute queries on single spectrum files. Nextflow Workflow \u00b6 We have a nextflow workflow to enable scalable queries across hundreds of thousands of mass spectrometry files. ProteoSAFe Workflow \u00b6 We have a proteosafe workflow that we have created that nicely integrates into GNPS - Try the beta here . Web API \u00b6 We have built out a web API for people to use, especially for parsing. https://msql.ucsd.edu/parse?query=QUERY%20MS2DATA%20WHERE%20MS1MZ=100 Simply put in the query as a url encoded parameter and a JSON representation of the parse is returned. Interactive Web Sandbox \u00b6 Checkout the interactive sandbox here .","title":"MSQL Introduction"},{"location":"#what-is-mass-spec-query-language","text":"The Mass Spec Query Langauge (MSQL) is a domain specific language meant to be a succinct way to express a query in a mass spectrometry centric fashion. It is inspired by SQL, but it attempts to bake in assumptions of mass spectrometry to make querying much more natural for mass spectrometry users. Broadly we attempt to design it according to several principles: Expressiveness - Capture complex mass spectrometry patterns that the community would like to look for Precision - Exactly prescribe how to find data without ambiguity Relatively Natural - MSQL should be relatively easy to read and write and even use as a way to communicate ideas about mass spectrometry, you know like a language.","title":"What is Mass Spec Query Language"},{"location":"#developers","text":"Mingxun Wang is the creator and main developer of MSQL. Please contact me if you have questions! I'm hoping this becomes a community effort so reach out if you want to help/use MSQL.","title":"Developers"},{"location":"#definition-of-a-query","text":"There are several parts QUERY <Type of Data> WHERE <Condition> AND <Condition> FILTER <Filter> AND <Filter>","title":"Definition of a Query"},{"location":"#type-of-data","text":"This determines the type of data you want to get. At its most fundamental level, its the peaks for either MS1DATA MS2DATA Further, there are functions that can modify this data scaninfo - This provides likely the most information you'd want for each scan scansum - Summation of the scan scannum - Returns the scan number Experimental Functions scanrangesum scanmaxint scanmaxmz scanrun","title":"Type of Data"},{"location":"#conditionals","text":"These are conditions to filter for scans of interest (by looking for peaks and sets of peaks) within the mass spectrometry data. You can create clauses, which are specific conditions and the associated qualifiers. You may further combine multiple conditions with AND operators. The types of conditions are as follows","title":"Conditionals"},{"location":"#rtmin","text":"Setting the minimum retention time in minutes","title":"RTMIN"},{"location":"#rtmax","text":"Setting the maximum retention time in minutes","title":"RTMAX"},{"location":"#ms2prod","text":"Looking for an MS2 peak","title":"MS2PROD"},{"location":"#ms2prec","text":"Looking for an MS2 precursor m/z","title":"MS2PREC"},{"location":"#ms2nl","text":"Looking for a neutral loss from precursor in the MS2 spectrum","title":"MS2NL"},{"location":"#qualifiers","text":"These can be attached to conditions to modify some properties about the peaks we are looking for.","title":"Qualifiers"},{"location":"#mass-accuracy","text":"These two fields enable setting a peak m/z tolerance TOLERANCEMZ=0.1 TOLERANCEPPM=50","title":"Mass Accuracy"},{"location":"#intensity-relative-to-full-spectrum","text":"These two fields enable to set an minimum intensity INTENSITYVALUE=1000 INTENSITYPERCENT=10","title":"Intensity Relative to Full Spectrum"},{"location":"#intensity-relative-to-other-peaks","text":"Here we can start imposing relative intensities between peaks INTENSITYMATCHREFERENCE INTENSITYMATCH=Y INTENSITYMATCH=Y*2 INTENSITYMATCHPERCENT=10 Intensity Matching Between Peaks This is actually complicated, but you'll end up with one peak per variable that is the reference and all others are relative to that reference. WHERE MS1MZ=X:INTENSITYMATCH=Y:INTENSITYMATCHREFERENCE AND MS1MZ=X+2:INTENSITYMATCH=Y*2:INTENSITYMATCHPERCENT=1","title":"Intensity Relative to Other Peaks"},{"location":"#filters","text":"Filters are like conditional but we don't elimate scans based on the condition. Rather, we simply filter out peaks within the spectra. This is useful for things like SRM or SIM/XIC.","title":"Filters"},{"location":"#examples","text":"","title":"Examples"},{"location":"#xic-generation","text":"MS1 XIC, m/z = 100 QUERY scansum(MS1DATA) FILTER MS1MZ=100:TOLERANCEMZ=0.1","title":"XIC Generation"},{"location":"#ms2-with-sugar-loss-neutral-loss-scan","text":"Neutral Loss, 163 Da QUERY scaninfo(MS2DATA) WHERE MS2NL=163","title":"MS2 With Sugar Loss - Neutral Loss Scan"},{"location":"#brominated-compounds","text":"QUERY scaninfo(MS2DATA) WHERE MS1MZ=X:INTENSITYMATCH=Y:INTENSITYMATCHREFERENCE AND MS1MZ=X+2:INTENSITYMATCH=Y:INTENSITYMATCHPERCENT=5 AND MS2PREC=X","title":"Brominated Compounds"},{"location":"#ms2-with-distinct-fragments-precursor-ion-scan","text":"One Product Ion, m/z = 660.2 QUERY scaninfo(MS2DATA) WHERE MS2PROD=660.2:TOLERANCEMZ=0.1 Two Product Ions, m/z = 660.2 and 468.2 QUERY scaninfo(MS2DATA) WHERE MS2PROD=660.2:TOLERANCEMZ=0.1 AND MS2PROD=468.2:TOLERANCEMZ=0.1","title":"MS2 with distinct fragment(s) - Precursor Ion Scan"},{"location":"#how-to-use-msql","text":"","title":"How To Use MSQL"},{"location":"#python-api","text":"We have a python API that you can utilize in your own software.","title":"Python API"},{"location":"#commandline-utility","text":"We have a standalone script that can execute queries on single spectrum files.","title":"Commandline Utility"},{"location":"#nextflow-workflow","text":"We have a nextflow workflow to enable scalable queries across hundreds of thousands of mass spectrometry files.","title":"Nextflow Workflow"},{"location":"#proteosafe-workflow","text":"We have a proteosafe workflow that we have created that nicely integrates into GNPS - Try the beta here .","title":"ProteoSAFe Workflow"},{"location":"#web-api","text":"We have built out a web API for people to use, especially for parsing. https://msql.ucsd.edu/parse?query=QUERY%20MS2DATA%20WHERE%20MS1MZ=100 Simply put in the query as a url encoded parameter and a JSON representation of the parse is returned.","title":"Web API"},{"location":"#interactive-web-sandbox","text":"Checkout the interactive sandbox here .","title":"Interactive Web Sandbox"}]}